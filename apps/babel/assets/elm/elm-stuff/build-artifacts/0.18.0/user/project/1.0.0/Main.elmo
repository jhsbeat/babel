var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0._0.ctor === 'Ok') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{students: _p0._0._0}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$viewStudent = function (student) {
	return A2(
		_elm_lang$html$Html$tr,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$td,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							student.name,
							A2(
								_elm_lang$core$Basics_ops['++'],
								' (',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(student.age),
									')')))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(student.subject),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$td,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(student.classification),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Enrolled Students'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$table,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('table'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$thead,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$tr,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$th,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Name (Age)'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$th,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Course'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Type'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$tbody,
								{ctor: '[]'},
								A2(_elm_lang$core$List$map, _user$project$Main$viewStudent, model.students)),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$initialModel = {
	students: {
		ctor: '::',
		_0: {name: '', age: 0, subject: '', classification: ''},
		_1: {ctor: '[]'}
	}
};
var _user$project$Main$Student = F4(
	function (a, b, c, d) {
		return {name: a, age: b, subject: c, classification: d};
	});
var _user$project$Main$studentDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'classification',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'subject',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'age',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'name',
				_elm_lang$core$Json_Decode$string,
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Student)))));
var _user$project$Main$decodeList = _elm_lang$core$Json_Decode$list(_user$project$Main$studentDecoder);
var _user$project$Main$decoder = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'data',
		_1: {ctor: '[]'}
	},
	_user$project$Main$decodeList);
var _user$project$Main$Model = function (a) {
	return {students: a};
};
var _user$project$Main$StudentData = function (a) {
	return {ctor: 'StudentData', _0: a};
};
var _user$project$Main$initialCmd = A2(
	_elm_lang$http$Http$send,
	_user$project$Main$StudentData,
	A2(_elm_lang$http$Http$get, 'http://localhost:4000/api/students', _user$project$Main$decoder));
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _user$project$Main$initialCmd};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p1) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
